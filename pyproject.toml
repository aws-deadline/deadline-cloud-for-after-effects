[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "deadline-cloud-for-after-effects"
dynamic = ["version"]
readme = "README.md"
license = ""
requires-python = ">=3.9"

dependencies = ["deadline == 0.37.*", "openjd-adaptor-runtime == 0.4.*"]

[project.scripts]
AfterEffectsAdaptor = "deadline.ae_adaptor.AEAdaptor:main"

# --- HATCH ---

[tool.hatch.build]
artifacts = ["*_version.py"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
version_scheme = "post-release"

[tool.hatch.build.hooks.vcs]
version-file = "_version.py"

[tool.hatch.build.hooks.custom]
path = "hatch_custom_hook.py"
jsx_version_path = "src/deadline/ae_submitter/DeadlineVersionRequirement.jsx"
# The minimum deadline library required for the AE submitter's CLI calls
jsx_version_minimum = [0, 36, 0]

[tool.hatch.build.hooks.custom.copy_version_py]
destinations = [
  "src/deadline/ae_adaptor"
]

[tool.hatch.build.targets.sdist]
include = ["src/deadline/ae_adaptor/*", "hatch_custom_hook.py"]

[tool.hatch.build.targets.wheel]
packages = ["src/deadline/ae_adaptor"]

# --- MYPY ---

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
show_error_codes = true
pretty = true
files = [ "src/**/*.py" ]
ignore_missing_imports = true
# Tell mypy that there's a namespace package at src/deadline
namespace_packages = true
explicit_package_bases = true
mypy_path = "src"

# [[tool.mypy.overrides]]
# module = ["PySide2.*"]

# --- RUFF / BLACK ---

[tool.ruff]
ignore = ["E501"]
line-length = 100

[tool.ruff.isort]
known-first-party = ["deadline_worker_agent"]

[tool.black]
line-length = 100

# --- PYTEST ---

[tool.pytest.ini_options]
xfail_strict = true
addopts = [
    "--durations=5",
    "--cov=src/deadline/ae_adaptor",
    "--color=yes",
    "--cov-report=html:build/coverage",
    "--cov-report=xml:build/coverage/coverage.xml",
    "--cov-report=term-missing",
    "--numprocesses=auto",
]
testpaths = [ "test" ]
looponfailroots = [
    "src",
    "test",
]
# looponfailroots is deprecated, this removes the deprecation from the test output
filterwarnings = [
    "ignore::DeprecationWarning"
]

# --- COVERAGE ---

[tool.coverage.run]
source_pkgs = [ "deadline/ae_adaptor" ]
branch = true
parallel = true
omit = [
  "**/__main__.py",
  "**/_version.py"
]


[tool.coverage.paths]
source = [
  "src/"
]

[tool.coverage.report]
show_missing = true
fail_under = 45
